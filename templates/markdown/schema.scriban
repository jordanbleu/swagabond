# {{ Api.Title }}

## {{Title}}

{{~Name}}

{{~Description~}}

{{if IsEnum}}
`Enum`

### Enum Options
{{~for opt in EnumOptions~}}
* {{opt.Name}} - {{opt.Value}}
{{~end~}}{{#/for opt in EnumOptions}}

### More Information

* **Backing Type:** {{DataType}}
* **Is Array:** {{IsArray}}
* **Example Value:** {{f_Coalesce Example "(no example available)"}}
* **Schema Reference ID:** {{ReferenceId}}

{{else}}{{# Not an enum}}

`Object`

```
{{Example}}
```

### Properties

{{for p in Properties}}
* *{{p.Name}}*
    * **Description:** {{f_Coalesce p.Description "[N/A]"}}
    * **Schema Name:** {{p.Schema.Name}}{{if p.Schema.IsArray}}[]{{end}}
    * **Schema:** {{p.Schema.Type}}
        * **Schema Description:** {{f_Coalesce p.Schema.Description "[N/A]"}}
    {{~if p.Schema.IsPrimitive}} 
        * **Type:** {{p.Schema.DataType}}
        * **Example:** `{{p.Schema.Example}}`
        * **Is Enum?:** {{p.Schema.IsEnum}}
        {{~if p.Schema.IsEnum~}}
        * **Enum Options:**
            {{~for opt in p.Schema.EnumOptions~}}
            * {{opt.Name}} = {{opt.Value}}
            {{~end~}}{{#/for opt in p.EnumOptions}}
        {{~end~}} {{~#if p.Schema.IsEnum~}}
        * **Is Array?:** {{p.Schema.IsArray}}
    {{else}} {{#/This is not a primitive, it is an Object}}
        * **Reference ID:** {{p.Schema.ReferenceId}}
        * [Object Details...](../schema/{{p.Schema.Name}}.md)
    {{end}}{{#/if p.Schema.IsPrimitive}}
{{end}}{{#for p in Properties}}

{{end}}{{#/if IsEnum}}

{{~if Extensions != empty~}}
## Extensions
{{~for ex in Extensions~}}
* {{ex.Name}} = `{{ex.Value}}`
{{~end~}}
{{end}}{{#/ if Extensions != empty}}

### [<< Back to API](../{{Api.Name}}.Readme.md)

*** 

*[Documentation generated with Swagabond](https://github.com/jordanbleu/swagabond)*
