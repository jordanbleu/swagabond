# {{ Api.Title }}

## {{Title}}

{{~ Description ~}}

{{~ if PathParameters != empty}}
## Path Parameters
{{ for p in PathParameters }}
* {{"{"}}{{p.Name}}{{"}"}} {{if p.Description != ''}} - {{p.Description}}{{end}}
    * **Schema Name:** {{p.Schema.Name}} {{if p.Schema.IsArray}}[]{{end}}
    * **Schema Description:** {{p.Schema.Description}}
    * **Type:** {{p.Schema.DataType}}
    * **Example:** `{{p.Schema.Example}}`
    * **Is Enum?:** {{p.Schema.IsEnum}}
    {{~if p.Schema.IsEnum~}}
    * **Enum Options:**
    {{~for opt in p.Schema.EnumOptions~}}
    * {{opt.Name}} = {{opt.Value}}
    {{~end~}}{{#/for opt in p.EnumOptions}}
    {{~end~}} {{~#if p.Schema.IsEnum~}}
    * **Is Array?:** {{p.Schema.IsArray}}
{{ end }}{{#/for p in PathParameters}}
{{~ end ~}}{{#/ if PathParameters != Empty}}

{{ if QueryParameters != empty}}
## Query Parameters
{{ for p in QueryParameters }}
* ?{{p.Name}} {{if p.Description != ''}} - {{p.Description}}{{end}}
    * **Schema Name:** {{p.Schema.Name}} {{if p.Schema.IsArray}}[]{{end}}
    * **Schema Description:** {{p.Schema.Description}}
    * **Type:** {{p.Schema.DataType}}
    * **Example:** `{{p.Schema.Example}}`
    * **Is Enum?:** {{p.Schema.IsEnum}}
    {{~if p.Schema.IsEnum~}}
    * **Enum Options:**
        {{~for opt in p.Schema.EnumOptions~}}
        * {{opt.Name}} = {{opt.Value}}
        {{~end~}}{{#/for opt in p.EnumOptions}}
    {{~end~}} {{~#if p.Schema.IsEnum~}}
    * **Is Array?:** {{p.Schema.IsArray}}
{{ end }}{{#/for p in QueryParameters}}
{{~ end ~}}{{#/ if QueryParameters != Empty}}

{{ if HeaderParameters != empty}}
## Headers
{{ for p in HeaderParameters }}
* {{p.Name}} {{if p.Description != ''}} - {{p.Description}}{{end}}
    * **Schema Name:** {{p.Schema.Name}} {{if p.Schema.IsArray}}[]{{end}}
    * **Schema Description:** {{p.Schema.Description}}
    * **Type:** {{p.Schema.DataType}}
    * **Example:** `{{p.Schema.Example}}`
    * **Is Enum?:** {{p.Schema.IsEnum}}
    {{~if p.Schema.IsEnum~}}
    * **Enum Options:**
        {{~for opt in p.Schema.EnumOptions~}}
        * {{opt.Name}} = {{opt.Value}}
        {{~end~}}{{#/for opt in p.EnumOptions}}
    {{~end~}} {{~#if p.Schema.IsEnum~}}
    * **Is Array?:** {{p.Schema.IsArray}}
{{ end }}{{#/for p in HeaderParameters}}
{{~ end ~}}{{#/ if HeaderParameters != Empty}}

{{ if CookieParameters != empty}}
## Cookies
{{ for p in CookieParameters }}
* {{p.Name}} {{if p.Description != ''}} - {{p.Description}}{{end}}
    * **Schema Name:** {{p.Schema.Name}} {{if p.Schema.IsArray}}[]{{end}}
    * **Schema Description:** {{p.Schema.Description}}
    * **Type:** {{p.Schema.DataType}}
    * **Example:** `{{p.Schema.Example}}`
    * **Is Enum?:** {{p.Schema.IsEnum}}
    {{~if p.Schema.IsEnum~}}
    * **Enum Options:**
        {{~for opt in p.Schema.EnumOptions~}}
        * {{opt.Name}} = {{opt.Value}}
        {{~end~}}{{#/for opt in p.EnumOptions}}
    {{~end~}} {{~#if p.Schema.IsEnum~}}
    * **Is Array?:** {{p.Schema.IsArray}}
{{ end }}{{#/for p in CookieParameters}}
{{~ end ~}}{{#/ if CookieParameters != Empty}}

## Request Body
{{ if RequestBody.IsEmpty }}
* N/A - This endpoint does not have a request body
{{else}}
* **Title:** {{RequestBody.Title}}
* **Name:** {{RequestBody.Name}}
* **Description:** {{RequestBody.Description}}
{{if RequestBody.Schema.IsPrimitive}} {{# this would be true in rare cases where the request body itself was a primitive value (not common) }}
* **Primitive Type:** RequestBody.Schema.DataType{{if RequestBody.Schema.IsArray}}[]{{end}}
* **IsEnum:**: RequestBody.IsEnum
* **Example:** {{RequestBody.Schema.Example}}
{{~if RequestBody.Schema.IsEnum~}}
* **Enum Options:**
    {{~for opt in RequestBody.Schema.EnumOptions~}}
    * {{opt.Name}} = {{opt.Value}}
    {{~end~}}{{#/for opt in RequestBody.EnumOptions}}
{{~end~}} {{~#if p.Schema.IsEnum~}}
* **IsArray:** RequestBody.Schema.IsArray
{{else}} {{# This is the most common case here, so output each property }}
* **Properties:**
{{for p in RequestBody.Schema.Properties}}
    * *{{p.Name}}*
        * **Description:** {{f_Coalesce p.Description "[N/A]"}}
        * **Schema Name:** {{p.Schema.Name}}{{if p.Schema.IsArray}}[]{{end}}
        * **Schema:** {{p.Schema.Type}}
            * **Schema Description:** {{f_Coalesce p.Schema.Description "[N/A]"}}
        {{~if p.Schema.IsPrimitive}} 
            * **Type:** {{p.Schema.DataType}}
            * **Example:** `{{p.Schema.Example}}`
            * **Is Enum?:** {{p.Schema.IsEnum}}
            {{~if p.Schema.IsEnum~}}
            * **Enum Options:**
                {{~for opt in p.Schema.EnumOptions~}}
                * {{opt.Name}} = {{opt.Value}}
                {{~end~}}{{#/for opt in p.EnumOptions}}
            {{~end~}} {{~#if p.Schema.IsEnum~}}
            * **Is Array?:** {{p.Schema.IsArray}}
        {{else}} {{#/This is not a primitive, it is an Object}}
            * **Reference ID:** {{p.Schema.ReferenceId}}
            * [Object Details...](../schema/{{p.Schema.Name}}.md)
        {{end}}{{#/if p.Schema.IsPrimitive}}
{{end}} {{#for p in RequestBody.Properties}}
{{end}} {{#if RequestBody.Schema.IsPrimitive}}
{{end}}{{#if RequestBody.IsEmpty}}

## Responses
{{for responseBody in ResponseBodies}}
* *{{responseBody.StatusCode}} Response*
    * **Title:** {{responseBody.Title}}
    * **Name:** {{responseBody.Name}}
    * **Description:** {{responseBody.Description}}
    {{if responseBody.Schema.IsPrimitive}} {{# this would be true in rare cases where the response body itself was a primitive value (not common) }}
    * *Response is a primitive value (such as plain text, etc.)*
    * **Primitive Type:** {{responseBody.Schema.DataType}}{{if responseBody.Schema.IsArray}}[]{{end}}
    * **IsEnum:** {{responseBody.Schema.IsEnum}}
    * **Example:** {{responseBody.Schema.Example}}
    {{~if responseBody.Schema.IsEnum~}}
    * **Enum Options:**
        {{~for opt in responseBody.Schema.EnumOptions~}}
        * {{opt.Name}} = {{opt.Value}}
        {{~end~}}{{#/for opt in responseBody.EnumOptions}}
    {{~end~}} {{~#if p.Schema.IsEnum~}}
    * **IsArray:** {{responseBody.Schema.IsArray}}
    {{else}} {{# This is the most common case here, so output each property }}
    * **Properties:**
    {{for p in responseBody.Schema.Properties}}
        * *{{p.Name}}*
            * **Description:** {{f_Coalesce p.Description "[N/A]"}}
            * **Schema Name:** {{p.Schema.Name}}{{if p.Schema.IsArray}}[]{{end}}
            * **Schema:** {{p.Schema.Type}}
                * **Schema Description:** {{f_Coalesce p.Schema.Description "[N/A]"}}
            {{~if p.Schema.IsPrimitive}} 
                * **Type:** {{p.Schema.DataType}}
                * **Example:** `{{p.Schema.Example}}`
                * **Is Enum?:** {{p.Schema.IsEnum}}
                {{~if p.Schema.IsEnum~}}
                * **Enum Options:**
                    {{~for opt in p.Schema.EnumOptions~}}
                    * {{opt.Name}} = {{opt.Value}}
                    {{~end~}}{{#/for opt in p.EnumOptions}}
                {{~end~}} {{~#if p.Schema.IsEnum~}}
                * **Is Array?:** {{p.Schema.IsArray}}
            {{else}} {{#/This is not a primitive, it is an Object}}
                * **Reference ID:** {{p.Schema.ReferenceId}}
                * [Object Details...](../schema/{{p.Schema.Name}}.md)
            {{end}}{{#/if p.Schema.IsPrimitive}}
    {{end}} {{#for p in responseBody.Properties}}
    {{end}} {{#if responseBody.Schema.IsPrimitive}}
{{end}}{{#/for responseBody in ResponseBodies}}
{{~if !DefaultResponseBody.IsEmpty~}}
* *Default / Fallback Response (for any status code that is not explicitly defined, this response can be assumed)*
    * **Title:** {{DefaultResponseBody.Title}}
    * **Name:** {{DefaultResponseBody.Name}}
    * **Description:** {{DefaultResponseBody.Description}}
    {{if DefaultResponseBody.Schema.IsPrimitive}} {{# this would be true in rare cases where the response body itself was a primitive value (not common) }}
    * *Response is a primitive value (such as plain text, etc.)*
    * **Primitive Type:** {{DefaultResponseBody.Schema.DataType}}{{if DefaultResponseBody.Schema.IsArray}}[]{{end}}
    * **IsEnum:** {{DefaultResponseBody.Schema.IsEnum}}
    * **Example:** {{DefaultResponseBody.Schema.Example}}
    {{~if DefaultResponseBody.Schema.IsEnum~}}
    * **Enum Options:**
        {{~for opt in DefaultResponseBody.Schema.EnumOptions~}}
        * {{opt.Name}} = {{opt.Value}}
        {{~end~}}{{#/for opt in DefaultResponseBody.EnumOptions}}
    {{~end~}} {{~#if p.Schema.IsEnum~}}
    * **IsArray:** {{DefaultResponseBody.Schema.IsArray}}
    {{else}} {{# This is the most common case here, so output each property }}
    * **Properties:**
    {{for p in DefaultResponseBody.Schema.Properties}}
        * *{{p.Name}}*
            * **Description:** {{f_Coalesce p.Description "[N/A]"}}
            * **Schema Name:** {{p.Schema.Name}}{{if p.Schema.IsArray}}[]{{end}}
            * **Schema:** {{p.Schema.Type}}
                * **Schema Description:** {{f_Coalesce p.Schema.Description "[N/A]"}}
            {{~if p.Schema.IsPrimitive}} 
                * **Type:** {{p.Schema.DataType}}
                * **Example:** `{{p.Schema.Example}}`
                * **Is Enum?:** {{p.Schema.IsEnum}}
                {{~if p.Schema.IsEnum~}}
                * **Enum Options:**
                    {{~for opt in p.Schema.EnumOptions~}}
                    * {{opt.Name}} = {{opt.Value}}
                    {{~end~}}{{#/for opt in p.EnumOptions}}
                {{~end~}} {{~#if p.Schema.IsEnum~}}
                * **Is Array?:** {{p.Schema.IsArray}}
            {{else}} {{#/This is not a primitive, it is an Object}}
                * **Reference ID:** {{p.Schema.ReferenceId}}
                * [Object Details...](../schema/{{p.Schema.Name}}.md)
            {{end}}{{#/if p.Schema.IsPrimitive}}
    {{end}} {{#for p in DefaultResponseBody.Properties}}
    {{end}} {{#if DefaultResponseBody.Schema.IsPrimitive}}
{{end}}{{#if DefaultResponseBody != empty}}

### [< Back to Path](../Paths/{{Path.Name}}.md)
### [<< Back to API](../{{Api.Name}}.Readme.md)

*** 

*[Documentation generated with Swagabond](https://github.com/jordanbleu/swagabond)*
